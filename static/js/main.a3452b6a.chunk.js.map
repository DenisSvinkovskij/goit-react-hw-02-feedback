{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.module.css","components/FeedbackStatistics/FeedbackStatistics.module.css","components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.js","components/FeedbackStatistics/FeedbackStatistics.js","components/Section/Section.js","components/NotificationNoStatistics/Notification.js","App.js","index.js"],"names":["module","exports","FeedbackOptions","onLeaveFeedback","className","s","btnsBlock","type","button","onClick","FeedbackStatistics","good","neutral","bad","total","positivePercentage","list","Section","title","children","section","Notification","message","App","state","countTotalFeedaback","Object","values","reduce","curVal","nextVal","countPositiveFeedbackPercentage","toFixed","handleLeaveFeedback","setState","prevState","this","posPerc","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,UAAY,mCAAmC,OAAS,kC,qBCA1ED,EAAOC,QAAU,CAAC,KAAO,mC,gBCAzBD,EAAOC,QAAU,CAAC,QAAU,2B,+LCGb,SAASC,EAAT,GAA+C,IAApBC,EAAmB,EAAnBA,gBACxC,OACE,sBAAKC,UAAWC,IAAEC,UAAlB,UACE,wBACEC,KAAK,SACLH,UAAWC,IAAEG,OACbC,QAAS,kBAAMN,EAAgB,SAHjC,kBAOA,wBACEI,KAAK,SACLH,UAAWC,IAAEG,OACbC,QAAS,kBAAMN,EAAgB,YAHjC,qBAOA,wBACEI,KAAK,SACLH,UAAWC,IAAEG,OACbC,QAAS,kBAAMN,EAAgB,QAHjC,oB,oBCjBS,SAASO,EAAT,GAMX,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,IACAC,EAEC,EAFDA,MACAC,EACC,EADDA,mBAEA,OACE,qBAAIX,UAAWC,IAAEW,KAAjB,UACE,wCAAWL,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,KACZ,qDAAwBC,EAAxB,U,oBCdS,SAASE,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,sBAAKf,UAAWC,IAAEe,QAAlB,UACE,6BAAKF,IACJC,KCJQ,SAASE,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,8BAAMA,ICKR,IAwDQC,EAxDf,4MACEC,MAAQ,CACNb,KAAM,EACNC,QAAS,EACTC,IAAK,GAJT,EAOEY,oBAAsB,WACpB,OAAOC,OAAOC,OAAO,EAAKH,OAAOI,QAC/B,SAACC,EAAQC,GAAT,OAAqBD,EAASC,MATpC,EAaEC,gCAAkC,SAACjB,EAAOH,GAExC,OADiBA,EAAOG,EAAS,KAClBkB,WAfnB,EAkBEC,oBAAsB,SAAA1B,GACpB,EAAK2B,UAAS,SAAAC,GACZ,OAAO,eAAG5B,EAAO4B,EAAU5B,GAAQ,OApBzC,uDAwBY,IAAD,EACwB6B,KAAKZ,MAA5Bb,EADD,EACCA,KAAME,EADP,EACOA,IAAKD,EADZ,EACYA,QACbE,EAAQsB,KAAKX,sBACbY,EAAUD,KAAKL,gCACnBjB,EACAsB,KAAKZ,MAAMb,MAGb,OACE,sBAAKP,UAAU,MAAf,UACE,cAACa,EAAD,CAASC,MAAO,wBAAhB,SACE,cAAChB,EAAD,CAAiBC,gBAAiBiC,KAAKH,wBAGzC,cAAChB,EAAD,CAASC,MAAO,aAAhB,SACGJ,EAAQ,EACP,cAACJ,EAAD,CACEC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBsB,IAGtB,cAAChB,EAAD,CAAcC,QAAQ,+BAhDlC,GAAyBgB,aCJzBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a3452b6a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnsBlock\":\"FeedbackOptions_btnsBlock__2vSRc\",\"button\":\"FeedbackOptions_button__1BYbK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"FeedbackStatistics_list__nccZW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__1i6Ap\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './FeedbackOptions.module.css';\n\nexport default function FeedbackOptions({ onLeaveFeedback }) {\n  return (\n    <div className={s.btnsBlock}>\n      <button\n        type=\"button\"\n        className={s.button}\n        onClick={() => onLeaveFeedback('good')}\n      >\n        Good\n      </button>\n      <button\n        type=\"button\"\n        className={s.button}\n        onClick={() => onLeaveFeedback('neutral')}\n      >\n        Neutral\n      </button>\n      <button\n        type=\"button\"\n        className={s.button}\n        onClick={() => onLeaveFeedback('bad')}\n      >\n        Bad\n      </button>\n    </div>\n  );\n}\n\nFeedbackOptions.propTypes = {\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './FeedbackStatistics.module.css';\n\nexport default function FeedbackStatistics({\n  good,\n  neutral,\n  bad,\n  total,\n  positivePercentage,\n}) {\n  return (\n    <ul className={s.list}>\n      <li>Good: {good}</li>\n      <li>Neutral: {neutral}</li>\n      <li>Bad: {bad}</li>\n      <li>Total: {total}</li>\n      <li>Positive feedback: {positivePercentage}%</li>\n    </ul>\n  );\n}\nFeedbackStatistics.propTypes = {\n  good: PropTypes.number,\n  neutral: PropTypes.number,\n  bad: PropTypes.number,\n  total: PropTypes.number,\n  positivePercentage: PropTypes.string,\n};\n","import React from 'react';\nimport s from './Section.module.css';\n\nexport default function Section({ title, children }) {\n  return (\n    <div className={s.section}>\n      <h2>{title}</h2>\n      {children}\n    </div>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function Notification({ message }) {\n  return <div>{message}</div>;\n}\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import './App.css';\n// import FeedbackCounter from './components/FeedbackCounter';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport FeedbackStatistics from './components/FeedbackStatistics/FeedbackStatistics';\nimport Section from './components/Section/Section';\nimport Notification from './components/NotificationNoStatistics/Notification';\n\nimport React, { Component } from 'react';\n\nexport class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  countTotalFeedaback = () => {\n    return Object.values(this.state).reduce(\n      (curVal, nextVal) => curVal + nextVal,\n    );\n  };\n\n  countPositiveFeedbackPercentage = (total, good) => {\n    const percent = (good / total) * 100;\n    return percent.toFixed();\n  };\n\n  handleLeaveFeedback = type => {\n    this.setState(prevState => {\n      return { [type]: prevState[type] + 1 };\n    });\n  };\n\n  render() {\n    const { good, bad, neutral } = this.state;\n    const total = this.countTotalFeedaback();\n    const posPerc = this.countPositiveFeedbackPercentage(\n      total,\n      this.state.good,\n    );\n\n    return (\n      <div className=\"App\">\n        <Section title={'Please leave feeaback'}>\n          <FeedbackOptions onLeaveFeedback={this.handleLeaveFeedback} />\n        </Section>\n\n        <Section title={'Statistics'}>\n          {total > 0 ? (\n            <FeedbackStatistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              positivePercentage={posPerc}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}